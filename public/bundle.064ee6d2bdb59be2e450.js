(()=>{"use strict";var e={701:(e,t,a)=>{a.d(t,{favoriteDB:()=>k});let n,r;const o=new WeakMap,i=new WeakMap,s=new WeakMap,l=new WeakMap,c=new WeakMap;let d={get(e,t,a){if(e instanceof IDBTransaction){if("done"===t)return i.get(e);if("objectStoreNames"===t)return e.objectStoreNames||s.get(e);if("store"===t)return a.objectStoreNames[1]?void 0:a.objectStore(a.objectStoreNames[0])}return p(e[t])},set:(e,t,a)=>(e[t]=a,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function u(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(r||(r=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(h(this),t),p(o.get(this))}:function(...t){return p(e.apply(h(this),t))}:function(t,...a){const n=e.call(h(this),t,...a);return s.set(n,t.sort?t.sort():[t]),p(n)}}function m(e){return"function"==typeof e?u(e):(e instanceof IDBTransaction&&function(e){if(i.has(e))return;const t=new Promise((t,a)=>{const n=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",o),e.removeEventListener("abort",o)},r=()=>{t(),n()},o=()=>{a(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",r),e.addEventListener("error",o),e.addEventListener("abort",o)});i.set(e,t)}(e),t=e,(n||(n=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(e=>t instanceof e)?new Proxy(e,d):e);var t}function p(e){if(e instanceof IDBRequest)return function(e){const t=new Promise((t,a)=>{const n=()=>{e.removeEventListener("success",r),e.removeEventListener("error",o)},r=()=>{t(p(e.result)),n()},o=()=>{a(e.error),n()};e.addEventListener("success",r),e.addEventListener("error",o)});return t.then(t=>{t instanceof IDBCursor&&o.set(t,e)}).catch(()=>{}),c.set(t,e),t}(e);if(l.has(e))return l.get(e);const t=m(e);return t!==e&&(l.set(e,t),c.set(t,e)),t}const h=e=>c.get(e);const g=["get","getKey","getAll","getAllKeys","count"],f=["put","add","delete","clear"],y=new Map;function b(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(y.get(t))return y.get(t);const a=t.replace(/FromIndex$/,""),n=t!==a,r=f.includes(a);if(!(a in(n?IDBIndex:IDBObjectStore).prototype)||!r&&!g.includes(a))return;const o=async function(e,...t){const o=this.transaction(e,r?"readwrite":"readonly");let i=o.store;return n&&(i=i.index(t.shift())),(await Promise.all([i[a](...t),r&&o.done]))[0]};return y.set(t,o),o}d=(e=>({...e,get:(t,a,n)=>b(t,a)||e.get(t,a,n),has:(t,a)=>!!b(t,a)||e.has(t,a)}))(d);const v="favorites",w="offline-stories",k={init:async()=>function(e,t,{blocked:a,upgrade:n,blocking:r,terminated:o}={}){const i=indexedDB.open(e,t),s=p(i);return n&&i.addEventListener("upgradeneeded",e=>{n(p(i.result),e.oldVersion,e.newVersion,p(i.transaction),e)}),a&&i.addEventListener("blocked",e=>a(e.oldVersion,e.newVersion,e)),s.then(e=>{o&&e.addEventListener("close",()=>o()),r&&e.addEventListener("versionchange",e=>r(e.oldVersion,e.newVersion,e))}).catch(()=>{}),s}("story-db",2,{upgrade(e,t){e.objectStoreNames.contains(v)||e.createObjectStore(v,{keyPath:"id"}),e.objectStoreNames.contains(w)||e.createObjectStore(w,{keyPath:"id",autoIncrement:!0})}}),async addFavorite(e){const t=await this.init();await t.put(v,e),console.log("📦 Story disimpan ke favorites:",e.name)},async getAllFavorites(){return(await this.init()).getAll(v)},async deleteFavorite(e){const t=await this.init();await t.delete(v,e),console.log("🗑️ Story dihapus dari favorites:",e)},async searchFavorites(e){return(await this.getAllFavorites()).filter(t=>t.name.toLowerCase().includes(e.toLowerCase())||t.description.toLowerCase().includes(e.toLowerCase()))},async filterFavoritesByDate(e="desc"){return(await this.getAllFavorites()).sort((t,a)=>{const n=new Date(t.createdAt),r=new Date(a.createdAt);return"desc"===e?r-n:n-r})},async sortFavoritesByName(e="asc"){return(await this.getAllFavorites()).sort((t,a)=>{const n=t.name.toLowerCase(),r=a.name.toLowerCase();return"asc"===e?n<r?-1:n>r?1:0:n>r?-1:n<r?1:0})},async addOfflineStory(e){const t=await this.init(),a={formData:await this.formDataToObject(e),timestamp:Date.now(),synced:!1},n=await t.add(w,a);return console.log("📱 Story offline disimpan:",n),n},async getOfflineStories(){return(await this.init()).getAll(w)},async deleteOfflineStory(e){const t=await this.init();await t.delete(w,e),console.log("🗑️ Offline story dihapus:",e)},async markSynced(e){const t=await this.init(),a=await t.get(w,e);a&&(a.synced=!0,await t.put(w,a),console.log("✅ Offline story marked as synced:",e))},async syncOfflineStories(e){const t=(await this.getOfflineStories()).filter(e=>!e.synced);for(const a of t)try{const t=this.objectToFormData(a.formData);(await e.addStory(t)).error||(await this.markSynced(a.id),console.log("✅ Offline story synced:",a.id))}catch(e){console.error("❌ Failed to sync offline story:",a.id,e)}},async formDataToObject(e){const t={};for(const[a,n]of e.entries())n instanceof File?t[a]={name:n.name,type:n.type,size:n.size,data:await this.fileToBase64(n)}:t[a]=n;return t},objectToFormData(e){const t=new FormData;for(const[a,n]of Object.entries(e))if(n&&"object"==typeof n&&n.data){const e=this.base64ToFile(n.data,n.name,n.type);t.append(a,e)}else t.append(a,n);return t},fileToBase64:async e=>new Promise((t,a)=>{const n=new FileReader;n.onload=()=>t(n.result),n.onerror=a,n.readAsDataURL(e)}),base64ToFile(e,t,a){const n=e.split(","),r=atob(n[1]);let o=r.length;const i=new Uint8Array(o);for(;o--;)i[o]=r.charCodeAt(o);return new File([i],t,{type:a})}}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,a),o.exports}a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);class n{constructor(e){this.view=e}async getView(){const e=await this.view.render();return setTimeout(()=>{"function"==typeof this.view.afterRender&&this.view.afterRender()},0),e}}const r="Story Map App",o="Aplikasi ini dapat menandakan sebuah lokasi untuk meelakukan share foto mirip seperti membuat story.",i="Follow IG @kareem_bw",s="https://story-api.dicoding.dev/v1",l={async register(e,t,a){try{const n=await fetch(`${s}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:t,password:a})}),r=await n.json();if(r.error)throw new Error(r.message);return{success:!0,message:"Registrasi berhasil! Silakan login."}}catch(e){return console.error("❌ Register gagal:",e.message),{success:!1,message:e.message}}},async login(e,t){try{const a=await fetch(`${s}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),n=await a.json();if(n.error)throw new Error(n.message);const r=n.loginResult.token;return localStorage.setItem("token",r),localStorage.setItem("userName",n.loginResult.name),console.log("✅ Login berhasil, token disimpan di localStorage"),{success:!0,message:"Login berhasil!"}}catch(e){return console.error("❌ Login gagal:",e.message),{success:!1,message:e.message}}},logout(){localStorage.removeItem("token"),localStorage.removeItem("userName"),console.log("🚪 Logout berhasil, token dihapus.")},getToken:()=>localStorage.getItem("token"),isLoggedIn:()=>!!localStorage.getItem("token"),async getStories(){const e=this.getToken();if(!e)return console.warn("⚠️ Tidak ada token, silakan login dulu."),[];if(!navigator.onLine){const e=localStorage.getItem("cachedStories");return e?(console.log("📦 Using cached stories from localStorage (offline mode)"),JSON.parse(e)):(console.warn("⚠️ No cached stories available offline"),[])}try{const t=await fetch(`${s}/stories`,{headers:{Authorization:`Bearer ${e}`}}),a=await t.json();if(a.error)throw new Error(a.message);return localStorage.setItem("cachedStories",JSON.stringify(a.listStory)),console.log(`📦 ${a.listStory.length} story berhasil diambil dan di-cache.`),a.listStory}catch(e){console.error("❌ Gagal memuat story:",e.message);const t=localStorage.getItem("cachedStories");return t?(console.log("📦 Using cached stories from localStorage"),JSON.parse(t)):[]}},async addStory(e){const t=this.getToken();if(!t)return{error:!0,message:"Silakan login terlebih dahulu."};try{const a=await fetch(`${s}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:e}),n=await a.json();if(n.error)throw new Error(n.message);return console.log("✅ Story berhasil ditambahkan!"),{error:!1,message:"Story berhasil dikirim!"}}catch(e){return console.error("❌ Gagal mengirim story:",e.message),{error:!0,message:e.message}}},async subscribeWebPush(e){const t=this.getToken();if(!t)return{error:!0,message:"Silakan login terlebih dahulu."};try{const a={endpoint:e.endpoint,keys:{p256dh:e.keys.p256dh,auth:e.keys.auth}},n=await fetch(`${s}/notifications/subscribe`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(a)}),r=await n.json();if(r.error)throw new Error(r.message);return console.log("✅ WebPush subscription berhasil:",r),{error:!1,message:r.message,data:r.data}}catch(e){return console.error("❌ Failed to subscribe WebPush:",e.message),{error:!0,message:e.message}}},async unsubscribeWebPush(e){const t=this.getToken();if(!t)return{error:!0,message:"Silakan login terlebih dahulu."};try{const a={endpoint:e.endpoint},n=await fetch(`${s}/notifications/subscribe`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(a)}),r=await n.json();if(r.error)throw new Error(r.message);return console.log("✅ WebPush unsubscription berhasil:",r),{error:!1,message:r.message}}catch(e){return console.error("❌ Failed to unsubscribe WebPush:",e.message),{error:!0,message:e.message}}}};var c=a(701);let d;"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then(()=>console.log("✅ Service Worker terdaftar")).catch(e=>console.error("❌ SW gagal:",e)),window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),d=e;const t=document.createElement("button");t.textContent="📱 Install Aplikasi",t.classList.add("install-btn"),document.body.appendChild(t),t.addEventListener("click",async()=>{t.style.display="none",d.prompt();const{outcome:e}=await d.userChoice;console.log(`User choice: ${e}`),d=null})}),window.addEventListener("online",async()=>{l.isLoggedIn()&&await c.favoriteDB.syncOfflineStories(l)});const u={async subscribe(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return console.warn("Push notifications not supported"),!1;try{const e=await navigator.serviceWorker.ready,t=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this.urlBase64ToUint8Array("BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk")});return(await l.subscribeWebPush(t.toJSON())).error?(console.error("❌ Failed to register subscription on server"),await t.unsubscribe(),!1):(console.log("✅ Push subscription berhasil:",t),localStorage.setItem("pushSubscription",JSON.stringify(t)),!0)}catch(e){return console.error("❌ Push subscription gagal:",e),!1}},async unsubscribe(){try{const e=await navigator.serviceWorker.ready,t=await e.pushManager.getSubscription();if(t){return(await l.unsubscribeWebPush(t.toJSON())).error&&console.error("❌ Failed to unregister subscription on server"),await t.unsubscribe(),console.log("✅ Push subscription dibatalkan"),localStorage.removeItem("pushSubscription"),!0}}catch(e){console.error("❌ Unsubscribe gagal:",e)}return!1},async isSubscribed(){try{const e=await navigator.serviceWorker.ready;return!!await e.pushManager.getSubscription()}catch{return!1}},urlBase64ToUint8Array(e){const t=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),a=window.atob(t),n=new Uint8Array(a.length);for(let e=0;e<a.length;++e)n[e]=a.charCodeAt(e);return n}};class m{render(){const e=document.createElement("div");return e.className="page page-home",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","home-title"),e.innerHTML=`\n            <h1 id="home-title" class="page-title" tabindex="0">\n                Welcome to ${r}\n            </h1>\n            <p class="page-text" aria-label="Deskripsi halaman home">\n                Ini adalah halaman Home dengan transisi custom.\n            </p>\n            <div class="notification-settings">\n                <button id="toggle-notifications" class="btn-toggle-notifications">\n                    Enable Push Notifications\n                </button>\n                <p id="notification-status" class="notification-status">Checking status...</p>\n            </div>\n        `,e}async afterRender(){const e=document.getElementById("toggle-notifications"),t=document.getElementById("notification-status");if(!("serviceWorker"in navigator)||!("PushManager"in window))return t.textContent="Push notifications not supported in this browser.",void(e.disabled=!0);if("https:"!==location.protocol&&"localhost"!==location.hostname)return t.textContent="Push notifications require HTTPS. Please access via secure connection.",void(e.disabled=!0);const a=await u.isSubscribed();this.updateUI(a,e,t),e.addEventListener("click",async()=>{let n;e.disabled=!0,e.textContent="Processing...";try{n=a?await u.unsubscribe():await u.subscribe()}catch(e){console.error("Push subscription error:",e),n=!1}if(n){const a=await u.isSubscribed();this.updateUI(a,e,t)}else alert("Failed to update notification settings. Please check console for errors."),e.disabled=!1,e.textContent=a?"Disable Notifications":"Enable Notifications"})}updateUI(e,t,a){e?(t.textContent="Disable Push Notifications",a.textContent="Push notifications are enabled."):(t.textContent="Enable Push Notifications",a.textContent="Push notifications are disabled."),t.disabled=!1}}const p=class{async render(){const e=document.createElement("section");return e.classList.add("auth-section"),e.innerHTML='\n      <h2>Login</h2>\n      <form id="loginForm" class="auth-form">\n        <input type="email" id="email" name="email" placeholder="Email" required />\n        <input type="password" id="password" name="password" placeholder="Password" required />\n        <button type="submit">Login</button>\n      </form>\n      <p>Belum punya akun? <a href="#/register">Daftar di sini</a></p>\n    ',e}async afterRender(){console.log("✅ LoginPage.afterRender() terpanggil!");const e=document.getElementById("loginForm");e?e.addEventListener("submit",async t=>{t.preventDefault();const a=document.querySelector("#email").value.trim(),n=document.querySelector("#password").value.trim();if(!a||!n)return void alert("Email dan password wajib diisi!");const r=e.querySelector("button");r.disabled=!0,r.textContent="Masuk...";try{const e=await l.login(a,n);alert(e.message),e.success&&(window.location.hash="#/")}catch(e){console.error("⚠️ Terjadi kesalahan saat login:",e),alert("Terjadi kesalahan. Coba lagi nanti.")}finally{r.disabled=!1,r.textContent="Login"}}):console.error("❌ Elemen form login tidak ditemukan!")}};const h=class{async render(){const e=document.createElement("section");return e.classList.add("auth-section"),e.innerHTML='\n      <h2>Register</h2>\n      <form id="registerForm" class="auth-form">\n        <input type="text" id="name" name="name" placeholder="Nama Lengkap" required />\n        <input type="email" id="email" name="email" placeholder="Email" required />\n        <input type="password" id="password" name="password" placeholder="Password" required minlength="8" />\n        <button type="submit">Daftar</button>\n      </form>\n      <p>Sudah punya akun? <a href="#/login">Login di sini</a></p>\n    ',e}async afterRender(){console.log("✅ RegisterPage.afterRender() terpanggil!");const e=document.getElementById("registerForm");e?e.addEventListener("submit",async t=>{t.preventDefault();const a=document.querySelector("#name").value.trim(),n=document.querySelector("#email").value.trim(),r=document.querySelector("#password").value.trim();if(!a||!n||!r)return void alert("Semua kolom wajib diisi!");const o=e.querySelector("button");o.disabled=!0,o.textContent="Mendaftar...";try{const e=await l.register(a,n,r);alert(e.message),e.success&&(window.location.hash="#/login")}catch(e){console.error("⚠️ Terjadi kesalahan saat register:",e),alert("Terjadi kesalahan. Coba lagi nanti.")}finally{o.disabled=!1,o.textContent="Daftar"}}):console.error("❌ Elemen form tidak ditemukan!")}},g={"/":m,"/about":class{render(){const e=document.createElement("div");return e.className="page page-about",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","about-title"),e.innerHTML=`\n      <h1 id="about-title" class="page-title" tabindex="0">About</h1>\n      <p class="page-text" tabindex="0">${o}</p>\n    `,e}},"/contact":class{render(){const e=document.createElement("div");return e.className="page page-contact",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","contact-title"),e.innerHTML=`\n            <h1 id="contact-title" class="page-title" tabindex="0">Contact</h1>\n            <p class="page-text" aria-label="Informasi kontak">${i}</p>\n        `,e}},"/map":class{constructor(){this.map=null,this.markers=[],this.stories=[]}async render(){const e=document.createElement("div");return e.className="page page-map",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","map-title"),e.innerHTML='\n            <h1 id="map-title" class="page-title" tabindex="0">Peta Cerita</h1>\n\n            <div class="map-wrapper">\n                <div id="map" class="map" role="application" aria-label="Peta lokasi cerita"></div>\n                <div class="story-list" role="list" aria-label="Daftar cerita"></div>\n            </div>\n        ',await this.initMap(e),e}async initMap(e){const t=e.querySelector("#map"),a=e.querySelector(".story-list");this.map&&(this.map.remove(),this.map=null,this.markers=[]),t.innerHTML="",this.stories=await l.getStories(),this.map=L.map(t).setView([-2.5,118],5);const n=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(this.map),r=L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",{attribution:"© OpenTopoMap contributors"});L.control.layers({"Street Map":n,"Topo Map":r}).addTo(this.map),await this.renderStoryList(a),this.stories.forEach((e,t)=>{if(e.lat&&e.lon){const t=L.marker([e.lat,e.lon]).addTo(this.map).bindPopup(`<b>${e.name}</b><br>${e.description}`);this.markers.push(t)}}),a.addEventListener("click",async t=>{const n=t.target.closest(".story-item"),r=t.target.closest(".btn-favorite");if(r)return t.stopPropagation(),await this.toggleFavorite(r.dataset.id),void await this.renderStoryList(a);if(!n)return;const o=n.dataset.index,i=this.stories[o];i.lat&&i.lon&&(this.map.flyTo([i.lat,i.lon],10),this.markers[o].openPopup()),e.querySelectorAll(".story-item").forEach(e=>e.classList.remove("active")),n.classList.add("active")}),a.addEventListener("keydown",e=>{if("Enter"===e.key||" "===e.key){e.preventDefault();const t=e.target.closest(".story-item");t&&t.click()}})}async renderStoryList(e){const t=await c.favoriteDB.getAllFavorites(),a=new Set(t.map(e=>e.id));e.innerHTML=this.stories.map((e,t)=>`\n            <div\n                class="story-item"\n                data-index="${t}"\n                role="listitem"\n                tabindex="0"\n                aria-label="Cerita oleh ${e.name}"\n            >\n                <img\n                    src="${e.photoUrl}"\n                    alt="Foto cerita oleh ${e.name}"\n                    class="story-img"\n                    loading="lazy"\n                />\n                <div class="story-content">\n                    <h3 class="story-title">${e.name}</h3>\n                    <p class="story-desc">${e.description}</p>\n                    <p class="story-date">${new Date(e.createdAt).toLocaleDateString()}</p>\n                </div>\n                <button\n                    class="btn-favorite ${a.has(e.id)?"favorited":""}"\n                    data-id="${e.id}"\n                    aria-label="${a.has(e.id)?"Remove from favorites":"Add to favorites"}"\n                >\n                    ${a.has(e.id)?"❤️":"🤍"}\n                </button>\n            </div>\n            `).join("")}async toggleFavorite(e){const t=this.stories.find(t=>t.id===e);if(!t)return;const a=(await c.favoriteDB.getAllFavorites()).some(t=>t.id===e);try{if(a)await c.favoriteDB.deleteFavorite(e),console.log("Removed from favorites:",t.name);else{const e={id:t.id,name:t.name,description:t.description,photoUrl:t.photoUrl,lat:t.lat,lon:t.lon,createdAt:t.createdAt||(new Date).toISOString()};await c.favoriteDB.addFavorite(e),console.log("Added to favorites:",t.name)}}catch(e){console.error("Error toggling favorite:",e),alert("Failed to update favorites")}}},"/add-story":class{render(){const e=document.createElement("div");return e.className="page page-add-story",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","add-story-title"),e.innerHTML='\n      <h1 id="add-story-title" tabindex="0">Tambah Cerita Baru</h1>\n\n      <form id="addStoryForm" class="add-story-form" aria-describedby="form-desc">\n        <p id="form-desc" class="sr-only"></p>\n\n        <div class="form-group">\n          <label for="description">Deskripsi Cerita</label>\n          <textarea \n            id="description" \n            name="description" \n            placeholder="Tuliskan deskripsi..." \n            aria-required="true"\n            required\n          ></textarea>\n        </div>\n\n        <div class="form-group">\n          <label for="photo">Upload Gambar</label>\n          <input \n            type="file" \n            id="photo" \n            name="photo" \n            accept="image/*" \n            aria-required="true"\n            required\n          >\n        </div>\n\n        <div class="form-group" role="group" aria-labelledby="map-label">\n          <label id="map-label">Pilih Lokasi di Peta</label>\n          <div id="map" role="application" aria-label="Peta untuk memilih lokasi cerita"></div>\n          <p id="location-info" aria-live="polite">Belum ada lokasi dipilih.</p>\n        </div>\n\n        <button \n          type="submit" \n          class="btn-submit"\n          aria-label="Kirim Cerita"\n        >\n          Kirim Cerita\n        </button>\n      </form>\n    ',setTimeout(()=>this.initMap(),100),e}async initMap(){if(!document.getElementById("map"))return;const e=L.map("map").setView([-2.5489,118.0149],5);let t;L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:18}).addTo(e);const n=document.getElementById("location-info");e.on("click",a=>{const{lat:r,lng:o}=a.latlng;t&&e.removeLayer(t),t=L.marker([r,o]).addTo(e),n.textContent=`Lokasi dipilih: ${r.toFixed(5)}, ${o.toFixed(5)}`,n.dataset.lat=r,n.dataset.lng=o});const r=document.getElementById("addStoryForm");r.addEventListener("submit",async e=>{e.preventDefault();const t=new FormData(r),o=n.dataset.lat,i=n.dataset.lng;if(!o||!i)return void alert("Silakan pilih lokasi di peta terlebih dahulu!");t.append("lat",o),t.append("lon",i);const s=await l.addStory(t);if(s.error)if(navigator.onLine)alert("❌ Gagal menambahkan cerita: "+s.message);else try{const{favoriteDB:e}=await Promise.resolve().then(a.bind(a,701));await e.addOfflineStory(t),alert("📱 Cerita disimpan offline. Akan disinkronkan saat online."),window.location.hash="/"}catch(e){console.error("❌ Gagal menyimpan offline:",e),alert("❌ Gagal menambahkan cerita dan tidak dapat menyimpan offline.")}else alert("✅ Cerita berhasil ditambahkan!"),window.location.hash="#/map"})}},"/favorites":class{constructor(){this.favorites=[],this.filteredFavorites=[],this.searchQuery="",this.sortOrder="desc",this.sortBy="date"}render(){const e=document.createElement("div");return e.className="page page-favorites",e.setAttribute("role","region"),e.setAttribute("aria-labelledby","favorites-title"),e.innerHTML='\n            <h1 id="favorites-title" class="page-title" tabindex="0">My Favorites</h1>\n\n            <div class="favorites-controls">\n                <div class="search-container">\n                    <input\n                        type="text"\n                        id="search-favorites"\n                        placeholder="Search favorites..."\n                        aria-label="Search favorites"\n                    >\n                    <button id="clear-search" class="btn-clear">Clear</button>\n                </div>\n\n                <div class="sort-controls">\n                    <label for="sort-by">Sort by:</label>\n                    <select id="sort-by" aria-label="Sort favorites by">\n                        <option value="date">Date</option>\n                        <option value="name">Name</option>\n                    </select>\n\n                    <label for="sort-order">Order:</label>\n                    <select id="sort-order" aria-label="Sort order">\n                        <option value="desc">Newest First</option>\n                        <option value="asc">Oldest First</option>\n                    </select>\n                </div>\n            </div>\n\n            <div id="favorites-list" class="favorites-list" role="list" aria-label="List of favorite stories">\n                <p class="loading">Loading favorites...</p>\n            </div>\n        ',e}async afterRender(){await this.loadFavorites();const e=document.getElementById("search-favorites"),t=document.getElementById("clear-search"),a=document.getElementById("sort-by"),n=document.getElementById("sort-order");e.addEventListener("input",e=>{this.searchQuery=e.target.value.toLowerCase(),this.applyFilters()}),t.addEventListener("click",()=>{e.value="",this.searchQuery="",this.applyFilters()}),a.addEventListener("change",e=>{this.sortBy=e.target.value,this.applyFilters()}),n.addEventListener("change",e=>{this.sortOrder=e.target.value,this.applyFilters()})}async loadFavorites(){try{this.favorites=await c.favoriteDB.getAllFavorites(),this.applyFilters()}catch(e){console.error("Error loading favorites:",e),this.showError("Failed to load favorites")}}applyFilters(){let e=[...this.favorites];this.searchQuery&&(e=e.filter(e=>e.name.toLowerCase().includes(this.searchQuery))),"date"===this.sortBy?e.sort((e,t)=>{const a=new Date(e.createdAt||0),n=new Date(t.createdAt||0);return"desc"===this.sortOrder?n-a:a-n}):"name"===this.sortBy&&e.sort((e,t)=>{const a=e.name.toLowerCase(),n=t.name.toLowerCase();return"asc"===this.sortOrder?a<n?-1:a>n?1:0:a>n?-1:a<n?1:0}),this.filteredFavorites=e,this.renderFavoritesList()}renderFavoritesList(){const e=document.getElementById("favorites-list");0!==this.filteredFavorites.length?(e.innerHTML=this.filteredFavorites.map(e=>`\n            <div class="favorite-item" role="listitem" data-id="${e.id}">\n                <img \n                    src="${this.escapeHtml(e.photoUrl)}" \n                    alt="Foto favorit ${this.escapeHtml(e.name)}" \n                    class="favorite-img" \n                    loading="lazy"\n                />\n                <div class="favorite-content">\n                    <h3 class="favorite-title">${this.escapeHtml(e.name)}</h3>\n                    <p class="favorite-description">${this.escapeHtml(e.description)}</p>\n                    <small class="favorite-date">\n                        Created: ${new Date(e.createdAt).toLocaleDateString()}\n                    </small>\n                </div>\n                <div class="favorite-actions">\n                    <button class="btn-remove-favorite" data-id="${e.id}" aria-label="Remove from favorites">\n                        Remove\n                    </button>\n                </div>\n            </div>\n        `).join(""),e.querySelectorAll(".btn-remove-favorite").forEach(e=>{e.addEventListener("click",async e=>{const t=e.target.dataset.id;await this.removeFavorite(t)})})):0===this.favorites.length?e.innerHTML='<p class="empty-state">No favorites yet. Add some stories to your favorites!</p>':e.innerHTML='<p class="empty-state">No favorites match your search.</p>'}async removeFavorite(e){try{await c.favoriteDB.deleteFavorite(e),await this.loadFavorites(),console.log("Favorite removed:",e)}catch(e){console.error("Error removing favorite:",e),alert("Failed to remove favorite")}}showError(e){document.getElementById("favorites-list").innerHTML=`<p class="error-state">${e}</p>`}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}},"/login":p,"/register":h};function f(){const e=document.querySelector(".navbar");if(!e)return;let t=e.querySelector(".nav-right");if(t||(t=document.createElement("div"),t.classList.add("nav-right"),e.appendChild(t)),t.innerHTML="",l.isLoggedIn()){const e=document.createElement("a");e.href="#/login",e.textContent="Logout",e.classList.add("nav-link"),e.addEventListener("click",e=>{e.preventDefault(),l.logout(),window.location.hash="#/login",f()}),t.appendChild(e)}else{const e=document.createElement("a");e.href="#/login",e.textContent="Login",e.classList.add("nav-link");const a=document.createElement("a");a.href="#/register",a.textContent="Register",a.classList.add("nav-link"),t.appendChild(e),t.appendChild(a)}}async function y(){const e=document.getElementById("app"),t=location.hash.slice(1).toLowerCase()||"/",a=["/login","/register"].includes(t);if(!a&&!l.isLoggedIn())return console.warn("🔒 Pengguna belum login, mengarahkan ke /login..."),void(window.location.hash="#/login");if(a&&l.isLoggedIn())return void(window.location.hash="#/");const r=g[t]||m;if(document.startViewTransition){document.startViewTransition(async()=>{e.innerHTML="";const a=new r,o=new n(a),i=await o.getView();i?(i.classList.add("view-transition"),e.appendChild(i),a.afterRender&&await a.afterRender()):console.error("View tidak ditemukan untuk route:",t)}).finished.then(()=>{f()})}else{e.innerHTML="";const a=new r,o=new n(a),i=await o.getView();i?(i.classList.add("view-transition"),e.appendChild(i),a.afterRender&&await a.afterRender()):console.error("View tidak ditemukan untuk route:",t),f()}}document.addEventListener("DOMContentLoaded",()=>{window.addEventListener("hashchange",y),y(),window.addEventListener("online",async()=>{console.log("🌐 Koneksi kembali online, sinkronisasi data offline...");try{await c.favoriteDB.syncOfflineStories(l),console.log("✅ Sinkronisasi selesai")}catch(e){console.error("❌ Gagal sinkronisasi:",e)}})})})();